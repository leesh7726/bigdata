# 출력을 원하실 경우 print() 활용
# 예) print(df.head())

# 답안 제출 예시
# 수험번호.csv 생성
# DataFrame.to_csv("0000.csv", index=False)

import pandas as pd
import sklearn

from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer

from sklearn.linear_model import LogisticRegression
from sklearn.neural_network import MLPClassifier
from sklearn.ensemble import RandomForestClassifier

X_train_path = 'data/X_train.csv'
y_train_path = 'data/y_train.csv'

X_test_path = 'data/X_test.csv'
y_test_path = 'data/1234.csv'

X_train = pd.read_csv(X_train_path)
y_train = pd.read_csv(y_train_path)
X_test = pd.read_csv(X_test_path)

#불필요 데이터 제거
X_train = X_train.drop(["cust_id"], axis=1)
y_train = y_train.drop(["cust_id"], axis=1)
X_test_cust_id = X_test.loc[:, "cust_id"]
X_test = X_test.drop(["cust_id"], axis=1)

#preprocessing
X_train.loc[:, ["주구매상품", "주구매지점"]] = X_train.loc[:, ["주구매상품", "주구매지점"]].apply(LabelEncoder().fit_transform)
X_test.loc[:, ["주구매상품", "주구매지점"]] = X_test.loc[:, ["주구매상품", "주구매지점"]].apply(LabelEncoder().fit_transform)
X_train.loc[:, ["환불금액"]] = X_train.loc[:, ["환불금액"]].fillna(0)
X_test.loc[:, ["환불금액"]] = X_test.loc[:, ["환불금액"]].fillna(0)

#model
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict_proba(X_test)
y_pred = pd.DataFrame(y_pred)
y_pred = y_pred.drop(0, axis=1)

y_pred = pd.concat([X_test_cust_id, y_pred], axis=1)

y_pred.columns=["cust_id", "gender"]

y_pred.to_csv("0000.csv", index=False)

print(y_pred)

